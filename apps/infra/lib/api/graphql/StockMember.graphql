type StockMember @aws_cognito_user_pools {
  id: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
  deletedAt: AWSDateTime
  lastName: String!
  firstName: String!
  lastNameKana: String!
  firstNameKana: String!
  fullName: String!
  fullNameKana: String!
  stemCell: StemCell
  stockInfos: [StockInfo!]
}

type StockMemberEdge @aws_cognito_user_pools {
  node: StockMember!
  cursor: String!
}

type StockMemberConnection @aws_cognito_user_pools {
  pageInfo: PageInfo!
  edges: [StockMemberEdge!]!
  totalCount: Int!
}

input StockMemberWhereUniqueInput {
  id: String
}

input StockMemberCreateInput {
  lastName: String!
  firstName: String!
  lastNameKana: String!
  firstNameKana: String!
}

input StockMemberUpdateInput {
  id: String!
  lastName: String!
  firstName: String!
  lastNameKana: String!
  firstNameKana: String!
}

extend type Query {
  ## AUTHENTICATE
  getStockMember(where: StockMemberWhereUniqueInput): StockMember!
    @aws_cognito_user_pools
  getStockMembers(
    where: StockMemberWhereInput
    orderBy: [StockMemberOrderByInput!]
    skip: Int
    take: Int
    cursor: StockMemberWhereUniqueInput
  ): StockMemberConnection! @aws_cognito_user_pools
}

extend type Mutation {
  ## AUTHENTICATE
  createStockMember(createStockMemberInput: StockMemberCreateInput): String
    @aws_cognito_user_pools
  updateStockMember(
    updateStockMemberInput: StockMemberUpdateInput
  ): StockMember! @aws_cognito_user_pools
  deleteStockMember(
    deleteStockMemberInput: StockMemberWhereUniqueInput
  ): String @aws_cognito_user_pools
}
