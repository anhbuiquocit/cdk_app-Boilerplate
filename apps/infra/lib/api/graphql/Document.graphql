## AUTHENTICATE
## ROLE: ADMIN, USER
type Document @aws_cognito_user_pools(cognito_groups: ["ADMIN", "USER"]) {
  id: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
  deletedAt: AWSDateTime
  keyFile: String!
  fileId: String
  fileUrl: String
  description: String
  status: EggApplicantContractStatus
  storageType: DocumentStorageType!
  type: DocumentType!
  createdByUserId: String!
}

input DocumentWhereUniqueInput {
  id: String
  barCode: String
}

## AUTHENTICATE
## ROLE: ADMIN, USER
type DocumentEdge @aws_cognito_user_pools(cognito_groups: ["ADMIN", "USER"]) {
  node: Document!
  cursor: String!
}

## AUTHENTICATE
## ROLE: ADMIN, USER
type DocumentConnection
  @aws_cognito_user_pools(cognito_groups: ["ADMIN", "USER"]) {
  pageInfo: PageInfo!
  edges: [DocumentEdge!]!
  totalCount: Int!
}

extend type Query {
  getDocuments(
    where: DocumentWhereInput
    skip: Int
    take: Int
    orderBy: [DocumentOrderByInput!]
    cursor: DocumentWhereUniqueInput
  ): DocumentConnection!
    @aws_cognito_user_pools(cognito_groups: ["ADMIN", "USER"])
}

extend type Mutation {
  ##AUTHENTICATE
  ##ROLE: USER
  userCreateDocument(
    keyFile: String!
    fileId: String!
  ): String!
    @aws_cognito_user_pools(cognito_groups: ["USER"])
}