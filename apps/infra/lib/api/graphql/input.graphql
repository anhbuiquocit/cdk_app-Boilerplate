
input AccountListRelationFilter {
  every: AccountWhereInput
  some: AccountWhereInput
  none: AccountWhereInput
}

input AccountRelationFilter {
  is: AccountWhereInput
  isNot: AccountWhereInput
}

input AccountWhereInput {
  id: StringFilter
  cognitoId: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  accountName: StringFilter
  lastName: StringFilter
  firstName: StringFilter
  lastNameKana: StringFilter
  firstNameKana: StringFilter
  birthday: AWSDateTimeFilter
  postCode: StringFilter
  address1: StringFilter
  address2: StringFilter
  address3: StringFilter
  lastLogin: AWSDateTimeFilter
  isActive: BooleanFilter
  clinicName: StringFilter
  role: EnumRoleFilter
  user: UserRelationFilter
  affiliatedClinic: AffiliatedClinicRelationFilter
  admin: AdminRelationFilter
  stemCell: StemCellRelationFilter

  NOT: [AccountWhereInput!]
  AND: [AccountWhereInput!]
  OR: [AccountWhereInput!]
}

input AccountOrderByRelationAggregateInput {
  _count: SortOrder
}

input AccountOrderByInput {
  id: SortOrder
  cognitoId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  accountName: SortOrder
  lastName: SortOrder
  firstName: SortOrder
  lastNameKana: SortOrder
  firstNameKana: SortOrder
  birthday: SortOrder
  postCode: SortOrder
  address1: SortOrder
  address2: SortOrder
  address3: SortOrder
  lastLogin: SortOrder
  isActive: SortOrder
  clinicName: SortOrder
  role: SortOrder
  user: UserOrderByInput
  affiliatedClinic: AffiliatedClinicOrderByInput
  admin: AdminOrderByInput
  stemCell: StemCellOrderByInput
}

input AdminListRelationFilter {
  every: AdminWhereInput
  some: AdminWhereInput
  none: AdminWhereInput
}

input AdminRelationFilter {
  is: AdminWhereInput
  isNot: AdminWhereInput
}

input AdminWhereInput {
  id: StringFilter
  lastName: StringFilter
  firstName: StringFilter
  lastNameKana: StringFilter
  firstNameKana: StringFilter
  fullName: StringFilter
  phoneNumber: StringFilter
  email: StringFilter
  accountId: StringFilter
  account: AccountRelationFilter
  takeCareInquiries: InquiryListRelationFilter
  updatedClinics: AffiliatedClinicListRelationFilter
  inquiryMessages: InquiryMessageListRelationFilter

  NOT: [AdminWhereInput!]
  AND: [AdminWhereInput!]
  OR: [AdminWhereInput!]
}

input AdminOrderByRelationAggregateInput {
  _count: SortOrder
}

input AdminOrderByInput {
  id: SortOrder
  lastName: SortOrder
  firstName: SortOrder
  lastNameKana: SortOrder
  firstNameKana: SortOrder
  fullName: SortOrder
  phoneNumber: SortOrder
  email: SortOrder
  accountId: SortOrder
  account: AccountOrderByInput
  takeCareInquiries: InquiryOrderByRelationAggregateInput
  updatedClinics: AffiliatedClinicOrderByRelationAggregateInput
  inquiryMessages: InquiryMessageOrderByRelationAggregateInput
}

input StemCellListRelationFilter {
  every: StemCellWhereInput
  some: StemCellWhereInput
  none: StemCellWhereInput
}

input StemCellRelationFilter {
  is: StemCellWhereInput
  isNot: StemCellWhereInput
}

input StemCellWhereInput {
  id: StringFilter
  lastName: StringFilter
  firstName: StringFilter
  lastNameKana: StringFilter
  firstNameKana: StringFilter
  phoneNumber: StringFilter
  email: StringFilter
  accountId: StringFilter
  account: AccountRelationFilter
  stockMembers: StockMemberListRelationFilter

  NOT: [StemCellWhereInput!]
  AND: [StemCellWhereInput!]
  OR: [StemCellWhereInput!]
}

input StemCellOrderByRelationAggregateInput {
  _count: SortOrder
}

input StemCellOrderByInput {
  id: SortOrder
  lastName: SortOrder
  firstName: SortOrder
  lastNameKana: SortOrder
  firstNameKana: SortOrder
  phoneNumber: SortOrder
  email: SortOrder
  accountId: SortOrder
  account: AccountOrderByInput
  stockMembers: StockMemberOrderByRelationAggregateInput
}

input UserListRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserWhereInput {
  id: StringFilter
  email: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  lastName: StringFilter
  firstName: StringFilter
  lastNameKana: StringFilter
  firstNameKana: StringFilter
  fullName: StringFilter
  fullNameKana: StringFilter
  phoneNumber: StringFilter
  initialPhoneNumber: StringFilter
  birthday: AWSDateTimeFilter
  temporarySignUpDate: AWSDateTimeFilter
  permanentSignUpDate: AWSDateTimeFilter
  workCompany: StringFilter
  memberShipNumber: StringFilter
  systemToUseType: EnumCouponTypeFilter
  postalCodeServiceCompany: StringFilter
  otherDiscountServices: StringFilter
  currentPostalCode: StringFilter
  currentAddress1: StringFilter
  currentAddress2: StringFilter
  currentAddress3: StringFilter
  currentBuildingName: StringFilter
  currentAddress: StringFilter
  deliveryPostalCode: StringFilter
  deliveryAddress1: StringFilter
  deliveryAddress2: StringFilter
  deliveryAddress3: StringFilter
  deliveryBuildingName: StringFilter
  deliveryAddress: StringFilter
  addressReceiveEmailType: EnumAddressReceiveEmailTypeFilter
  otherWelfareCompany: StringFilter
  otherCompany: StringFilter
  billPlan: EnumBillPlanFilter
  otherCouponCode: StringFilter
  welfareUserCode: StringFilter
  isBenefit: BooleanFilter
  isSubscribeNewsletter: BooleanFilter
  isDeleveryAddress: BooleanFilter
  identityPaperBack: StringFilter
  identityPaperFront: StringFilter
  identityPaperType: EnumIdentityPaperTypeFilter
  otherPostCode: StringFilter
  otherAddress1: StringFilter
  otherAddress2: StringFilter
  otherAddress3: StringFilter
  otherBuildingName: StringFilter
  otherAddress: StringFilter
  scheduledClinicId: StringFilter
  signDocumentDate: AWSDateTimeFilter
  scheduledClinic: AffiliatedClinicRelationFilter
  status: EnumUserStatusFilter
  accountId: StringFilter
  account: AccountRelationFilter
  billings: BillingListRelationFilter
  eggApplicants: EggApplicantListRelationFilter
  createdInquiries: InquiryListRelationFilter
  userOldInfos: UserOldInfoListRelationFilter
  eggTransportRequest: EggTransportRequestListRelationFilter
  documents: DocumentListRelationFilter
  inquiryMessages: InquiryMessageListRelationFilter
  subscriptions: PaymentSubscriptionListRelationFilter
  VerifyToken: VerifyTokenListRelationFilter
  couponId: StringFilter
  coupon: CouponRelationFilter
  files: FileListRelationFilter
  isSaveCard: BooleanFilter

  NOT: [UserWhereInput!]
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
}

input UserOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrderByInput {
  id: SortOrder
  email: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  lastName: SortOrder
  firstName: SortOrder
  lastNameKana: SortOrder
  firstNameKana: SortOrder
  fullName: SortOrder
  fullNameKana: SortOrder
  phoneNumber: SortOrder
  initialPhoneNumber: SortOrder
  birthday: SortOrder
  temporarySignUpDate: SortOrder
  permanentSignUpDate: SortOrder
  workCompany: SortOrder
  memberShipNumber: SortOrder
  systemToUseType: SortOrder
  postalCodeServiceCompany: SortOrder
  otherDiscountServices: SortOrder
  currentPostalCode: SortOrder
  currentAddress1: SortOrder
  currentAddress2: SortOrder
  currentAddress3: SortOrder
  currentBuildingName: SortOrder
  currentAddress: SortOrder
  deliveryPostalCode: SortOrder
  deliveryAddress1: SortOrder
  deliveryAddress2: SortOrder
  deliveryAddress3: SortOrder
  deliveryBuildingName: SortOrder
  deliveryAddress: SortOrder
  addressReceiveEmailType: SortOrder
  otherWelfareCompany: SortOrder
  otherCompany: SortOrder
  billPlan: SortOrder
  otherCouponCode: SortOrder
  welfareUserCode: SortOrder
  isBenefit: SortOrder
  isSubscribeNewsletter: SortOrder
  isDeleveryAddress: SortOrder
  identityPaperBack: SortOrder
  identityPaperFront: SortOrder
  identityPaperType: SortOrder
  otherPostCode: SortOrder
  otherAddress1: SortOrder
  otherAddress2: SortOrder
  otherAddress3: SortOrder
  otherBuildingName: SortOrder
  otherAddress: SortOrder
  scheduledClinicId: SortOrder
  signDocumentDate: SortOrder
  scheduledClinic: AffiliatedClinicOrderByInput
  status: SortOrder
  accountId: SortOrder
  account: AccountOrderByInput
  billings: BillingOrderByRelationAggregateInput
  eggApplicants: EggApplicantOrderByRelationAggregateInput
  createdInquiries: InquiryOrderByRelationAggregateInput
  userOldInfos: UserOldInfoOrderByRelationAggregateInput
  eggTransportRequest: EggTransportRequestOrderByRelationAggregateInput
  documents: DocumentOrderByRelationAggregateInput
  inquiryMessages: InquiryMessageOrderByRelationAggregateInput
  subscriptions: PaymentSubscriptionOrderByRelationAggregateInput
  VerifyToken: VerifyTokenOrderByRelationAggregateInput
  couponId: SortOrder
  coupon: CouponOrderByInput
  files: FileOrderByRelationAggregateInput
  isSaveCard: SortOrder
}

input UserOldInfoListRelationFilter {
  every: UserOldInfoWhereInput
  some: UserOldInfoWhereInput
  none: UserOldInfoWhereInput
}

input UserOldInfoRelationFilter {
  is: UserOldInfoWhereInput
  isNot: UserOldInfoWhereInput
}

input UserOldInfoWhereInput {
  id: StringFilter
  email: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  lastName: StringFilter
  firstName: StringFilter
  lastNameKana: StringFilter
  firstNameKana: StringFilter
  fullName: StringFilter
  fullNameKana: StringFilter
  phoneNumber: StringFilter
  birthday: AWSDateTimeFilter
  workCompany: StringFilter
  memberShipNumber: StringFilter
  systemToUseType: EnumCouponTypeFilter
  postalCodeServiceCompany: StringFilter
  otherDiscountServices: StringFilter
  billPlan: EnumBillPlanFilter
  currentPostalCode: StringFilter
  currentAddress1: StringFilter
  currentAddress2: StringFilter
  currentAddress3: StringFilter
  currentBuildingName: StringFilter
  deliveryPostalCode: StringFilter
  deliveryAddress1: StringFilter
  deliveryAddress2: StringFilter
  deliveryAddress3: StringFilter
  deliveryBuildingName: StringFilter
  addressReceiveEmailType: EnumAddressReceiveEmailTypeFilter
  otherWelfareCompany: StringFilter
  otherCompany: StringFilter
  otherCouponCode: StringFilter
  welfareUserCode: StringFilter
  isBenefit: BooleanFilter
  isSubscribeNewsletter: BooleanFilter
  identityPaperBack: StringFilter
  identityPaperFront: StringFilter
  identityPaperType: EnumIdentityPaperTypeFilter
  otherPostCode: StringFilter
  otherAddress1: StringFilter
  otherAddress2: StringFilter
  otherAddress3: StringFilter
  otherBuildingName: StringFilter
  scheduledClinicId: StringFilter
  scheduledClinic: AffiliatedClinicRelationFilter
  userId: StringFilter
  user: UserRelationFilter
  couponId: StringFilter
  coupon: CouponRelationFilter

  NOT: [UserOldInfoWhereInput!]
  AND: [UserOldInfoWhereInput!]
  OR: [UserOldInfoWhereInput!]
}

input UserOldInfoOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOldInfoOrderByInput {
  id: SortOrder
  email: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  lastName: SortOrder
  firstName: SortOrder
  lastNameKana: SortOrder
  firstNameKana: SortOrder
  fullName: SortOrder
  fullNameKana: SortOrder
  phoneNumber: SortOrder
  birthday: SortOrder
  workCompany: SortOrder
  memberShipNumber: SortOrder
  systemToUseType: SortOrder
  postalCodeServiceCompany: SortOrder
  otherDiscountServices: SortOrder
  billPlan: SortOrder
  currentPostalCode: SortOrder
  currentAddress1: SortOrder
  currentAddress2: SortOrder
  currentAddress3: SortOrder
  currentBuildingName: SortOrder
  deliveryPostalCode: SortOrder
  deliveryAddress1: SortOrder
  deliveryAddress2: SortOrder
  deliveryAddress3: SortOrder
  deliveryBuildingName: SortOrder
  addressReceiveEmailType: SortOrder
  otherWelfareCompany: SortOrder
  otherCompany: SortOrder
  otherCouponCode: SortOrder
  welfareUserCode: SortOrder
  isBenefit: SortOrder
  isSubscribeNewsletter: SortOrder
  identityPaperBack: SortOrder
  identityPaperFront: SortOrder
  identityPaperType: SortOrder
  otherPostCode: SortOrder
  otherAddress1: SortOrder
  otherAddress2: SortOrder
  otherAddress3: SortOrder
  otherBuildingName: SortOrder
  scheduledClinicId: SortOrder
  scheduledClinic: AffiliatedClinicOrderByInput
  userId: SortOrder
  user: UserOrderByInput
  couponId: SortOrder
  coupon: CouponOrderByInput
}

input AffiliatedClinicListRelationFilter {
  every: AffiliatedClinicWhereInput
  some: AffiliatedClinicWhereInput
  none: AffiliatedClinicWhereInput
}

input AffiliatedClinicRelationFilter {
  is: AffiliatedClinicWhereInput
  isNot: AffiliatedClinicWhereInput
}

input AffiliatedClinicWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  representativeDirector: StringFilter
  clinicName: StringFilter
  email: StringFilter
  phoneNumber: StringFilter
  postalCode: StringFilter
  address1: StringFilter
  address2: StringFilter
  address3: StringFilter
  address4: StringFilter
  address: StringFilter
  website: StringFilter
  prefectures: StringFilter
  municipalities: StringFilter
  buildingName: StringFilter
  transferFee: FloatFilter
  status: EnumAffiliatedClinicStatusFilter
  account: AccountRelationFilter
  accountId: StringFilter
  updatedById: StringFilter
  updatedBy: AdminRelationFilter
  scheduledUsers: UserListRelationFilter
  scheduledOldInfoUsers: UserOldInfoListRelationFilter
  eggApplicants: EggApplicantListRelationFilter
  eggTransportRequest: EggTransportRequestListRelationFilter
  personInCharge: PersonInChargeListRelationFilter
  stockInfos: StockInfoListRelationFilter

  NOT: [AffiliatedClinicWhereInput!]
  AND: [AffiliatedClinicWhereInput!]
  OR: [AffiliatedClinicWhereInput!]
}

input AffiliatedClinicOrderByRelationAggregateInput {
  _count: SortOrder
}

input AffiliatedClinicOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  representativeDirector: SortOrder
  clinicName: SortOrder
  email: SortOrder
  phoneNumber: SortOrder
  postalCode: SortOrder
  address1: SortOrder
  address2: SortOrder
  address3: SortOrder
  address4: SortOrder
  address: SortOrder
  website: SortOrder
  prefectures: SortOrder
  municipalities: SortOrder
  buildingName: SortOrder
  transferFee: SortOrder
  status: SortOrder
  account: AccountOrderByInput
  accountId: SortOrder
  updatedById: SortOrder
  updatedBy: AdminOrderByInput
  scheduledUsers: UserOrderByRelationAggregateInput
  scheduledOldInfoUsers: UserOldInfoOrderByRelationAggregateInput
  eggApplicants: EggApplicantOrderByRelationAggregateInput
  eggTransportRequest: EggTransportRequestOrderByRelationAggregateInput
  personInCharge: PersonInChargeOrderByRelationAggregateInput
  stockInfos: StockInfoOrderByRelationAggregateInput
}

input InquiryListRelationFilter {
  every: InquiryWhereInput
  some: InquiryWhereInput
  none: InquiryWhereInput
}

input InquiryRelationFilter {
  is: InquiryWhereInput
  isNot: InquiryWhereInput
}

input InquiryWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  inquiryUsername: StringFilter
  email: StringFilter
  phoneNumber: StringFilter
  inquiryType: EnumInquiryTypeFilter
  content: StringFilter
  status: EnumInquiryStatusFilter
  isUserReceiveNotification: BooleanFilter
  isAdminReceiveNotification: BooleanFilter
  conversationUpdatedAt: AWSDateTimeFilter
  createdBy: UserRelationFilter
  createdByUserId: StringFilter
  takeCareBy: AdminRelationFilter
  takeCareByAdminId: StringFilter
  messages: InquiryMessageListRelationFilter

  NOT: [InquiryWhereInput!]
  AND: [InquiryWhereInput!]
  OR: [InquiryWhereInput!]
}

input InquiryOrderByRelationAggregateInput {
  _count: SortOrder
}

input InquiryOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  inquiryUsername: SortOrder
  email: SortOrder
  phoneNumber: SortOrder
  inquiryType: SortOrder
  content: SortOrder
  status: SortOrder
  isUserReceiveNotification: SortOrder
  isAdminReceiveNotification: SortOrder
  conversationUpdatedAt: SortOrder
  createdBy: UserOrderByInput
  createdByUserId: SortOrder
  takeCareBy: AdminOrderByInput
  takeCareByAdminId: SortOrder
  messages: InquiryMessageOrderByRelationAggregateInput
}

input InquiryMessageListRelationFilter {
  every: InquiryMessageWhereInput
  some: InquiryMessageWhereInput
  none: InquiryMessageWhereInput
}

input InquiryMessageRelationFilter {
  is: InquiryMessageWhereInput
  isNot: InquiryMessageWhereInput
}

input InquiryMessageWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  content: StringFilter
  isRead: BooleanFilter
  keyFile: StringFilter
  inquiryId: StringFilter
  inquiry: InquiryRelationFilter
  userId: StringFilter
  adminId: StringFilter
  user: UserRelationFilter
  admin: AdminRelationFilter

  NOT: [InquiryMessageWhereInput!]
  AND: [InquiryMessageWhereInput!]
  OR: [InquiryMessageWhereInput!]
}

input InquiryMessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input InquiryMessageOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  content: SortOrder
  isRead: SortOrder
  keyFile: SortOrder
  inquiryId: SortOrder
  inquiry: InquiryOrderByInput
  userId: SortOrder
  adminId: SortOrder
  user: UserOrderByInput
  admin: AdminOrderByInput
}

input EggApplicantListRelationFilter {
  every: EggApplicantWhereInput
  some: EggApplicantWhereInput
  none: EggApplicantWhereInput
}

input EggApplicantRelationFilter {
  is: EggApplicantWhereInput
  isNot: EggApplicantWhereInput
}

input EggApplicantWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  remarks: StringFilter
  eggCollectionTime: IntFilter
  eggCollectionPlanDate: AWSDateTimeFilter
  identityPaperType: EnumIdentityPaperTypeFilter
  identityPaperFront: StringFilter
  identityPaperBack: StringFilter
  isLast: BooleanFilter
  status: EnumEggApplicantStatusFilter
  clinicId: StringFilter
  clinic: AffiliatedClinicRelationFilter
  appliedUserId: StringFilter
  appliedBy: UserRelationFilter
  eggCollectionReport: EggCollectionReportRelationFilter
  billings: BillingListRelationFilter
  eggKitTransportation: EggKitTransportationRelationFilter
  stockInfos: StockInfoListRelationFilter
  subscription: PaymentSubscriptionRelationFilter

  NOT: [EggApplicantWhereInput!]
  AND: [EggApplicantWhereInput!]
  OR: [EggApplicantWhereInput!]
}

input EggApplicantOrderByRelationAggregateInput {
  _count: SortOrder
}

input EggApplicantOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  remarks: SortOrder
  eggCollectionTime: SortOrder
  eggCollectionPlanDate: SortOrder
  identityPaperType: SortOrder
  identityPaperFront: SortOrder
  identityPaperBack: SortOrder
  isLast: SortOrder
  status: SortOrder
  clinicId: SortOrder
  clinic: AffiliatedClinicOrderByInput
  appliedUserId: SortOrder
  appliedBy: UserOrderByInput
  eggCollectionReport: EggCollectionReportOrderByInput
  billings: BillingOrderByRelationAggregateInput
  eggKitTransportation: EggKitTransportationOrderByInput
  stockInfos: StockInfoOrderByRelationAggregateInput
  subscription: PaymentSubscriptionOrderByInput
}

input EggCollectionReportListRelationFilter {
  every: EggCollectionReportWhereInput
  some: EggCollectionReportWhereInput
  none: EggCollectionReportWhereInput
}

input EggCollectionReportRelationFilter {
  is: EggCollectionReportWhereInput
  isNot: EggCollectionReportWhereInput
}

input EggCollectionReportWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  eggCollectionDate: AWSDateTimeFilter
  eggFreezingDate: AWSDateTimeFilter
  eggCollectionTime: IntFilter
  eggCollectionUserDate: AWSDateTimeFilter
  lastStockedDate: AWSDateTimeFilter
  eggQuantity: IntFilter
  noKens: IntFilter
  noDevices: IntFilter
  kens: KenListRelationFilter
  devices: DeviceListRelationFilter
  eggApplicantId: StringFilter
  eggApplicant: EggApplicantRelationFilter
  files: FileListRelationFilter
  eggs: EggListRelationFilter

  NOT: [EggCollectionReportWhereInput!]
  AND: [EggCollectionReportWhereInput!]
  OR: [EggCollectionReportWhereInput!]
}

input EggCollectionReportOrderByRelationAggregateInput {
  _count: SortOrder
}

input EggCollectionReportOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  eggCollectionDate: SortOrder
  eggFreezingDate: SortOrder
  eggCollectionTime: SortOrder
  eggCollectionUserDate: SortOrder
  lastStockedDate: SortOrder
  eggQuantity: SortOrder
  noKens: SortOrder
  noDevices: SortOrder
  kens: KenOrderByRelationAggregateInput
  devices: DeviceOrderByRelationAggregateInput
  eggApplicantId: SortOrder
  eggApplicant: EggApplicantOrderByInput
  files: FileOrderByRelationAggregateInput
  eggs: EggOrderByRelationAggregateInput
}

input KenListRelationFilter {
  every: KenWhereInput
  some: KenWhereInput
  none: KenWhereInput
}

input KenRelationFilter {
  is: KenWhereInput
  isNot: KenWhereInput
}

input KenWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  barCode: StringFilter
  devices: DeviceListRelationFilter
  scheduleTransferDate: AWSDateTimeFilter
  startTime: AWSDateTimeFilter
  endTime: AWSDateTimeFilter
  status: EnumKenTransferStatusFilter
  eggKitTranportId: StringFilter
  eggKitTranportation: EggKitTransportationRelationFilter
  eggCollectionReportId: StringFilter
  eggCollectionReport: EggCollectionReportRelationFilter
  stockInfo: StockInfoRelationFilter
  eggTransportRequestKens: EggTransportRequestKenListRelationFilter
  eggs: EggListRelationFilter

  NOT: [KenWhereInput!]
  AND: [KenWhereInput!]
  OR: [KenWhereInput!]
}

input KenOrderByRelationAggregateInput {
  _count: SortOrder
}

input KenOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  barCode: SortOrder
  devices: DeviceOrderByRelationAggregateInput
  scheduleTransferDate: SortOrder
  startTime: SortOrder
  endTime: SortOrder
  status: SortOrder
  eggKitTranportId: SortOrder
  eggKitTranportation: EggKitTransportationOrderByInput
  eggCollectionReportId: SortOrder
  eggCollectionReport: EggCollectionReportOrderByInput
  stockInfo: StockInfoOrderByInput
  eggTransportRequestKens: EggTransportRequestKenOrderByRelationAggregateInput
  eggs: EggOrderByRelationAggregateInput
}

input DeviceListRelationFilter {
  every: DeviceWhereInput
  some: DeviceWhereInput
  none: DeviceWhereInput
}

input DeviceRelationFilter {
  is: DeviceWhereInput
  isNot: DeviceWhereInput
}

input DeviceWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  barCode: StringFilter
  kenBarcode: StringFilter
  ken: KenRelationFilter
  eggCollectionReportId: StringFilter
  eggCollectionReport: EggCollectionReportRelationFilter
  eggs: EggListRelationFilter

  NOT: [DeviceWhereInput!]
  AND: [DeviceWhereInput!]
  OR: [DeviceWhereInput!]
}

input DeviceOrderByRelationAggregateInput {
  _count: SortOrder
}

input DeviceOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  barCode: SortOrder
  kenBarcode: SortOrder
  ken: KenOrderByInput
  eggCollectionReportId: SortOrder
  eggCollectionReport: EggCollectionReportOrderByInput
  eggs: EggOrderByRelationAggregateInput
}

input EggListRelationFilter {
  every: EggWhereInput
  some: EggWhereInput
  none: EggWhereInput
}

input EggRelationFilter {
  is: EggWhereInput
  isNot: EggWhereInput
}

input EggWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  index: IntFilter
  grade: EnumEggGradeFilter
  kenBarcode: StringFilter
  ken: KenRelationFilter
  deviceBarcode: StringFilter
  device: DeviceRelationFilter
  eggCollectionReportId: StringFilter
  eggCollectionReport: EggCollectionReportRelationFilter

  NOT: [EggWhereInput!]
  AND: [EggWhereInput!]
  OR: [EggWhereInput!]
}

input EggOrderByRelationAggregateInput {
  _count: SortOrder
}

input EggOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  index: SortOrder
  grade: SortOrder
  kenBarcode: SortOrder
  ken: KenOrderByInput
  deviceBarcode: SortOrder
  device: DeviceOrderByInput
  eggCollectionReportId: SortOrder
  eggCollectionReport: EggCollectionReportOrderByInput
}

input FileListRelationFilter {
  every: FileWhereInput
  some: FileWhereInput
  none: FileWhereInput
}

input FileRelationFilter {
  is: FileWhereInput
  isNot: FileWhereInput
}

input FileWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  fileName: StringFilter
  key: StringFilter
  description: StringFilter
  userId: StringFilter
  user: UserRelationFilter
  eggCollectionReportId: StringFilter
  eggCollectionReport: EggCollectionReportRelationFilter

  NOT: [FileWhereInput!]
  AND: [FileWhereInput!]
  OR: [FileWhereInput!]
}

input FileOrderByRelationAggregateInput {
  _count: SortOrder
}

input FileOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  fileName: SortOrder
  key: SortOrder
  description: SortOrder
  userId: SortOrder
  user: UserOrderByInput
  eggCollectionReportId: SortOrder
  eggCollectionReport: EggCollectionReportOrderByInput
}

input StockInfoListRelationFilter {
  every: StockInfoWhereInput
  some: StockInfoWhereInput
  none: StockInfoWhereInput
}

input StockInfoRelationFilter {
  is: StockInfoWhereInput
  isNot: StockInfoWhereInput
}

input StockInfoWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  stockinPlanDateStart: AWSDateTimeFilter
  stockinPlanDateEnd: AWSDateTimeFilter
  stockoutPlanDateStart: AWSDateTimeFilter
  stockoutPlanDateEnd: AWSDateTimeFilter
  stockinPlanDate: AWSDateTimeFilter
  stockinStartTime: AWSDateTimeFilter
  stockinEndTime: AWSDateTimeFilter
  stockoutPlanDate: AWSDateTimeFilter
  stockoutStartTime: AWSDateTimeFilter
  stockoutEndTime: AWSDateTimeFilter
  barCode: StringFilter
  eggApplicantId: StringFilter
  eggApplicant: EggApplicantRelationFilter
  ken: KenRelationFilter
  kenId: StringFilter
  appliedBy: StockMemberRelationFilter
  appliedById: StringFilter
  status: EnumStockInfoStatusFilter
  tankInfo: StringFilter
  eggTransportRequest: EggTransportRequestRelationFilter
  eggTransportRequestId: StringFilter
  destinationClinicId: StringFilter
  destinationClinic: AffiliatedClinicRelationFilter

  NOT: [StockInfoWhereInput!]
  AND: [StockInfoWhereInput!]
  OR: [StockInfoWhereInput!]
}

input StockInfoOrderByRelationAggregateInput {
  _count: SortOrder
}

input StockInfoOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  stockinPlanDateStart: SortOrder
  stockinPlanDateEnd: SortOrder
  stockoutPlanDateStart: SortOrder
  stockoutPlanDateEnd: SortOrder
  stockinPlanDate: SortOrder
  stockinStartTime: SortOrder
  stockinEndTime: SortOrder
  stockoutPlanDate: SortOrder
  stockoutStartTime: SortOrder
  stockoutEndTime: SortOrder
  barCode: SortOrder
  eggApplicantId: SortOrder
  eggApplicant: EggApplicantOrderByInput
  ken: KenOrderByInput
  kenId: SortOrder
  appliedBy: StockMemberOrderByInput
  appliedById: SortOrder
  status: SortOrder
  tankInfo: SortOrder
  eggTransportRequest: EggTransportRequestOrderByInput
  eggTransportRequestId: SortOrder
  destinationClinicId: SortOrder
  destinationClinic: AffiliatedClinicOrderByInput
}

input EggKitTransportationListRelationFilter {
  every: EggKitTransportationWhereInput
  some: EggKitTransportationWhereInput
  none: EggKitTransportationWhereInput
}

input EggKitTransportationRelationFilter {
  is: EggKitTransportationWhereInput
  isNot: EggKitTransportationWhereInput
}

input EggKitTransportationWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  documentSendDate: AWSDateTimeFilter
  barcodeSheetCount: IntFilter
  eggApplicantId: StringFilter
  eggApplicant: EggApplicantRelationFilter
  kens: KenListRelationFilter

  NOT: [EggKitTransportationWhereInput!]
  AND: [EggKitTransportationWhereInput!]
  OR: [EggKitTransportationWhereInput!]
}

input EggKitTransportationOrderByRelationAggregateInput {
  _count: SortOrder
}

input EggKitTransportationOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  documentSendDate: SortOrder
  barcodeSheetCount: SortOrder
  eggApplicantId: SortOrder
  eggApplicant: EggApplicantOrderByInput
  kens: KenOrderByRelationAggregateInput
}

input EggTransportRequestListRelationFilter {
  every: EggTransportRequestWhereInput
  some: EggTransportRequestWhereInput
  none: EggTransportRequestWhereInput
}

input EggTransportRequestRelationFilter {
  is: EggTransportRequestWhereInput
  isNot: EggTransportRequestWhereInput
}

input EggTransportRequestWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  destinationClinicId: StringFilter
  destinationClinic: AffiliatedClinicRelationFilter
  requestById: StringFilter
  requestBy: UserRelationFilter
  eggTransportRequestKens: EggTransportRequestKenListRelationFilter
  billings: BillingListRelationFilter
  stockInfo: StockInfoListRelationFilter

  NOT: [EggTransportRequestWhereInput!]
  AND: [EggTransportRequestWhereInput!]
  OR: [EggTransportRequestWhereInput!]
}

input EggTransportRequestOrderByRelationAggregateInput {
  _count: SortOrder
}

input EggTransportRequestOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  destinationClinicId: SortOrder
  destinationClinic: AffiliatedClinicOrderByInput
  requestById: SortOrder
  requestBy: UserOrderByInput
  eggTransportRequestKens: EggTransportRequestKenOrderByRelationAggregateInput
  billings: BillingOrderByRelationAggregateInput
  stockInfo: StockInfoOrderByRelationAggregateInput
}

input EggTransportRequestKenListRelationFilter {
  every: EggTransportRequestKenWhereInput
  some: EggTransportRequestKenWhereInput
  none: EggTransportRequestKenWhereInput
}

input EggTransportRequestKenRelationFilter {
  is: EggTransportRequestKenWhereInput
  isNot: EggTransportRequestKenWhereInput
}

input EggTransportRequestKenWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  kenId: StringFilter
  ken: KenRelationFilter
  eggTransportRequestId: StringFilter
  eggTransportRequest: EggTransportRequestRelationFilter
  clinicStatus: EnumEggTransportRequestStatusClinicSideFilter
  adminStatus: EnumEggTransportRequestStatusAdminSideFilter
  expectedAcceptanceDate: AWSDateTimeFilter
  personInChargeId: StringFilter
  personInCharge: PersonInChargeRelationFilter
  clinicDocumentId: StringFilter
  scheduledDeliveryDate: AWSDateTimeFilter
  startTime: AWSDateTimeFilter
  endTime: AWSDateTimeFilter
  expectedUseDate: AWSDateTimeFilter
  userDocumentId: StringFilter
  isConfirmedSpermTestByClinic: BooleanFilter
  isExplainedByClinic: BooleanFilter
  isConfirmedSpermTestByUser: BooleanFilter
  isConfirmedStorageFeeByUser: BooleanFilter

  NOT: [EggTransportRequestKenWhereInput!]
  AND: [EggTransportRequestKenWhereInput!]
  OR: [EggTransportRequestKenWhereInput!]
}

input EggTransportRequestKenOrderByRelationAggregateInput {
  _count: SortOrder
}

input EggTransportRequestKenOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  kenId: SortOrder
  ken: KenOrderByInput
  eggTransportRequestId: SortOrder
  eggTransportRequest: EggTransportRequestOrderByInput
  clinicStatus: SortOrder
  adminStatus: SortOrder
  expectedAcceptanceDate: SortOrder
  personInChargeId: SortOrder
  personInCharge: PersonInChargeOrderByInput
  clinicDocumentId: SortOrder
  scheduledDeliveryDate: SortOrder
  startTime: SortOrder
  endTime: SortOrder
  expectedUseDate: SortOrder
  userDocumentId: SortOrder
  isConfirmedSpermTestByClinic: SortOrder
  isExplainedByClinic: SortOrder
  isConfirmedSpermTestByUser: SortOrder
  isConfirmedStorageFeeByUser: SortOrder
}

input PersonInChargeListRelationFilter {
  every: PersonInChargeWhereInput
  some: PersonInChargeWhereInput
  none: PersonInChargeWhereInput
}

input PersonInChargeRelationFilter {
  is: PersonInChargeWhereInput
  isNot: PersonInChargeWhereInput
}

input PersonInChargeWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  lastName: StringFilter
  firstName: StringFilter
  fullName: StringFilter
  lastNameKana: StringFilter
  fullNameKana: StringFilter
  firstNameKana: StringFilter
  clinicId: StringFilter
  clinic: AffiliatedClinicRelationFilter
  eggTransportRequestKens: EggTransportRequestKenListRelationFilter

  NOT: [PersonInChargeWhereInput!]
  AND: [PersonInChargeWhereInput!]
  OR: [PersonInChargeWhereInput!]
}

input PersonInChargeOrderByRelationAggregateInput {
  _count: SortOrder
}

input PersonInChargeOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  lastName: SortOrder
  firstName: SortOrder
  fullName: SortOrder
  lastNameKana: SortOrder
  fullNameKana: SortOrder
  firstNameKana: SortOrder
  clinicId: SortOrder
  clinic: AffiliatedClinicOrderByInput
  eggTransportRequestKens: EggTransportRequestKenOrderByRelationAggregateInput
}

input BillingListRelationFilter {
  every: BillingWhereInput
  some: BillingWhereInput
  none: BillingWhereInput
}

input BillingRelationFilter {
  is: BillingWhereInput
  isNot: BillingWhereInput
}

input BillingWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  total: FloatFilter
  amount: FloatFilter
  discount: FloatFilter
  billingDate: AWSDateTimeFilter
  paidDate: AWSDateTimeFilter
  lastBillingDate: AWSDateTimeFilter
  status: EnumBillingStatusFilter
  eggApplicant: EggApplicantRelationFilter
  eggApplicantId: StringFilter
  appliedById: StringFilter
  appliedBy: UserRelationFilter
  eggTransportRequestId: StringFilter
  eggTransportRequest: EggTransportRequestRelationFilter
  transactions: PaymentTransactionListRelationFilter
  billingItems: BillingItemListRelationFilter
  kenQuantity: IntFilter

  NOT: [BillingWhereInput!]
  AND: [BillingWhereInput!]
  OR: [BillingWhereInput!]
}

input BillingOrderByRelationAggregateInput {
  _count: SortOrder
}

input BillingOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  total: SortOrder
  amount: SortOrder
  discount: SortOrder
  billingDate: SortOrder
  paidDate: SortOrder
  lastBillingDate: SortOrder
  status: SortOrder
  eggApplicant: EggApplicantOrderByInput
  eggApplicantId: SortOrder
  appliedById: SortOrder
  appliedBy: UserOrderByInput
  eggTransportRequestId: SortOrder
  eggTransportRequest: EggTransportRequestOrderByInput
  transactions: PaymentTransactionOrderByRelationAggregateInput
  billingItems: BillingItemOrderByRelationAggregateInput
  kenQuantity: SortOrder
}

input BillingItemListRelationFilter {
  every: BillingItemWhereInput
  some: BillingItemWhereInput
  none: BillingItemWhereInput
}

input BillingItemRelationFilter {
  is: BillingItemWhereInput
  isNot: BillingItemWhereInput
}

input BillingItemWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  billingId: StringFilter
  billing: BillingRelationFilter
  billingType: EnumBillingTypeFilter
  total: FloatFilter
  amount: FloatFilter
  discount: FloatFilter
  kenQuantity: IntFilter
  kenPrice: FloatFilter
  couponId: StringFilter
  coupon: CouponRelationFilter
  description: StringFilter

  NOT: [BillingItemWhereInput!]
  AND: [BillingItemWhereInput!]
  OR: [BillingItemWhereInput!]
}

input BillingItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input BillingItemOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  billingId: SortOrder
  billing: BillingOrderByInput
  billingType: SortOrder
  total: SortOrder
  amount: SortOrder
  discount: SortOrder
  kenQuantity: SortOrder
  kenPrice: SortOrder
  couponId: SortOrder
  coupon: CouponOrderByInput
  description: SortOrder
}

input AreaListRelationFilter {
  every: AreaWhereInput
  some: AreaWhereInput
  none: AreaWhereInput
}

input AreaRelationFilter {
  is: AreaWhereInput
  isNot: AreaWhereInput
}

input AreaWhereInput {
  code: StringFilter
  region: StringFilter
  prefecture: StringFilter
  prefectureKana: StringFilter
  city: StringFilter
  cityKana: StringFilter
  address1: StringFilter
  address1Kana: StringFilter

  NOT: [AreaWhereInput!]
  AND: [AreaWhereInput!]
  OR: [AreaWhereInput!]
}

input AreaOrderByRelationAggregateInput {
  _count: SortOrder
}

input AreaOrderByInput {
  code: SortOrder
  region: SortOrder
  prefecture: SortOrder
  prefectureKana: SortOrder
  city: SortOrder
  cityKana: SortOrder
  address1: SortOrder
  address1Kana: SortOrder
}

input StockMemberListRelationFilter {
  every: StockMemberWhereInput
  some: StockMemberWhereInput
  none: StockMemberWhereInput
}

input StockMemberRelationFilter {
  is: StockMemberWhereInput
  isNot: StockMemberWhereInput
}

input StockMemberWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  lastName: StringFilter
  firstName: StringFilter
  lastNameKana: StringFilter
  firstNameKana: StringFilter
  fullName: StringFilter
  fullNameKana: StringFilter
  stemCellId: StringFilter
  stemCell: StemCellRelationFilter
  stockInfos: StockInfoListRelationFilter

  NOT: [StockMemberWhereInput!]
  AND: [StockMemberWhereInput!]
  OR: [StockMemberWhereInput!]
}

input StockMemberOrderByRelationAggregateInput {
  _count: SortOrder
}

input StockMemberOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  lastName: SortOrder
  firstName: SortOrder
  lastNameKana: SortOrder
  firstNameKana: SortOrder
  fullName: SortOrder
  fullNameKana: SortOrder
  stemCellId: SortOrder
  stemCell: StemCellOrderByInput
  stockInfos: StockInfoOrderByRelationAggregateInput
}

input DocumentListRelationFilter {
  every: DocumentWhereInput
  some: DocumentWhereInput
  none: DocumentWhereInput
}

input DocumentRelationFilter {
  is: DocumentWhereInput
  isNot: DocumentWhereInput
}

input DocumentWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  keyFile: StringFilter
  fileId: StringFilter
  description: StringFilter
  storageType: EnumDocumentStorageTypeFilter
  type: EnumDocumentTypeFilter
  createdByUserId: StringFilter
  status: EnumEggApplicantContractStatusFilter
  createdBy: UserRelationFilter

  NOT: [DocumentWhereInput!]
  AND: [DocumentWhereInput!]
  OR: [DocumentWhereInput!]
}

input DocumentOrderByRelationAggregateInput {
  _count: SortOrder
}

input DocumentOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  keyFile: SortOrder
  fileId: SortOrder
  description: SortOrder
  storageType: SortOrder
  type: SortOrder
  createdByUserId: SortOrder
  status: SortOrder
  createdBy: UserOrderByInput
}

input CouponListRelationFilter {
  every: CouponWhereInput
  some: CouponWhereInput
  none: CouponWhereInput
}

input CouponRelationFilter {
  is: CouponWhereInput
  isNot: CouponWhereInput
}

input CouponWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  type: EnumCouponTypeFilter
  benefitName: StringFilter
  companyCode: StringFilter
  discount: FloatFilter
  users: UserListRelationFilter
  userOldInfo: UserOldInfoListRelationFilter
  billingItems: BillingItemListRelationFilter

  NOT: [CouponWhereInput!]
  AND: [CouponWhereInput!]
  OR: [CouponWhereInput!]
}

input CouponOrderByRelationAggregateInput {
  _count: SortOrder
}

input CouponOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  type: SortOrder
  benefitName: SortOrder
  companyCode: SortOrder
  discount: SortOrder
  users: UserOrderByRelationAggregateInput
  userOldInfo: UserOldInfoOrderByRelationAggregateInput
  billingItems: BillingItemOrderByRelationAggregateInput
}

input PaymentSubscriptionListRelationFilter {
  every: PaymentSubscriptionWhereInput
  some: PaymentSubscriptionWhereInput
  none: PaymentSubscriptionWhereInput
}

input PaymentSubscriptionRelationFilter {
  is: PaymentSubscriptionWhereInput
  isNot: PaymentSubscriptionWhereInput
}

input PaymentSubscriptionWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  userId: StringFilter
  user: UserRelationFilter
  paymentDate: AWSDateTimeFilter
  billPlan: EnumBillPlanFilter
  status: EnumSubscriptionStatusFilter
  eggApplicantId: StringFilter
  eggApplicant: EggApplicantRelationFilter
  transactions: PaymentTransactionListRelationFilter
  kenQuantity: IntFilter

  NOT: [PaymentSubscriptionWhereInput!]
  AND: [PaymentSubscriptionWhereInput!]
  OR: [PaymentSubscriptionWhereInput!]
}

input PaymentSubscriptionOrderByRelationAggregateInput {
  _count: SortOrder
}

input PaymentSubscriptionOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  userId: SortOrder
  user: UserOrderByInput
  paymentDate: SortOrder
  billPlan: SortOrder
  status: SortOrder
  eggApplicantId: SortOrder
  eggApplicant: EggApplicantOrderByInput
  transactions: PaymentTransactionOrderByRelationAggregateInput
  kenQuantity: SortOrder
}

input PaymentTransactionListRelationFilter {
  every: PaymentTransactionWhereInput
  some: PaymentTransactionWhereInput
  none: PaymentTransactionWhereInput
}

input PaymentTransactionRelationFilter {
  is: PaymentTransactionWhereInput
  isNot: PaymentTransactionWhereInput
}

input PaymentTransactionWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  amount: StringFilter
  transactionId: StringFilter
  trackingId: StringFilter
  subscriptionId: StringFilter
  errorCode: StringFilter
  response: StringFilter
  subscription: PaymentSubscriptionRelationFilter
  billingId: StringFilter
  billing: BillingRelationFilter
  type: EnumPaymentTransactionTypeFilter
  status: EnumPaymentTransactionStatusFilter

  NOT: [PaymentTransactionWhereInput!]
  AND: [PaymentTransactionWhereInput!]
  OR: [PaymentTransactionWhereInput!]
}

input PaymentTransactionOrderByRelationAggregateInput {
  _count: SortOrder
}

input PaymentTransactionOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  amount: SortOrder
  transactionId: SortOrder
  trackingId: SortOrder
  subscriptionId: SortOrder
  errorCode: SortOrder
  response: SortOrder
  subscription: PaymentSubscriptionOrderByInput
  billingId: SortOrder
  billing: BillingOrderByInput
  type: SortOrder
  status: SortOrder
}

input SystemConfigListRelationFilter {
  every: SystemConfigWhereInput
  some: SystemConfigWhereInput
  none: SystemConfigWhereInput
}

input SystemConfigRelationFilter {
  is: SystemConfigWhereInput
  isNot: SystemConfigWhereInput
}

input SystemConfigWhereInput {
  id: StringFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  type: EnumSystemConfigTypeFilter
  key: StringFilter
  value: StringFilter
  numberValue: FloatFilter

  NOT: [SystemConfigWhereInput!]
  AND: [SystemConfigWhereInput!]
  OR: [SystemConfigWhereInput!]
}

input SystemConfigOrderByRelationAggregateInput {
  _count: SortOrder
}

input SystemConfigOrderByInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  type: SortOrder
  key: SortOrder
  value: SortOrder
  numberValue: SortOrder
}

input VerifyTokenListRelationFilter {
  every: VerifyTokenWhereInput
  some: VerifyTokenWhereInput
  none: VerifyTokenWhereInput
}

input VerifyTokenRelationFilter {
  is: VerifyTokenWhereInput
  isNot: VerifyTokenWhereInput
}

input VerifyTokenWhereInput {
  id: StringFilter
  createdByUserId: StringFilter
  createdBy: UserRelationFilter
  createdAt: AWSDateTimeFilter
  updatedAt: AWSDateTimeFilter
  deletedAt: AWSDateTimeFilter
  token: StringFilter
  lastEmail: StringFilter
  newEmail: StringFilter
  bizType: EnumUpdateTypeFilter

  NOT: [VerifyTokenWhereInput!]
  AND: [VerifyTokenWhereInput!]
  OR: [VerifyTokenWhereInput!]
}

input VerifyTokenOrderByRelationAggregateInput {
  _count: SortOrder
}

input VerifyTokenOrderByInput {
  id: SortOrder
  createdByUserId: SortOrder
  createdBy: UserOrderByInput
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
  token: SortOrder
  lastEmail: SortOrder
  newEmail: SortOrder
  bizType: SortOrder
}

input EnumRoleFilter {
  equals: Role
  in: [Role!]
  notIn: [Role!]
  not: EnumRoleFilter
}


input EnumCouponTypeFilter {
  equals: CouponType
  in: [CouponType!]
  notIn: [CouponType!]
  not: EnumCouponTypeFilter
}


input EnumAddressReceiveEmailTypeFilter {
  equals: AddressReceiveEmailType
  in: [AddressReceiveEmailType!]
  notIn: [AddressReceiveEmailType!]
  not: EnumAddressReceiveEmailTypeFilter
}


input EnumBillPlanFilter {
  equals: BillPlan
  in: [BillPlan!]
  notIn: [BillPlan!]
  not: EnumBillPlanFilter
}


input EnumIdentityPaperTypeFilter {
  equals: IdentityPaperType
  in: [IdentityPaperType!]
  notIn: [IdentityPaperType!]
  not: EnumIdentityPaperTypeFilter
}


input EnumUserStatusFilter {
  equals: UserStatus
  in: [UserStatus!]
  notIn: [UserStatus!]
  not: EnumUserStatusFilter
}


input EnumAffiliatedClinicStatusFilter {
  equals: AffiliatedClinicStatus
  in: [AffiliatedClinicStatus!]
  notIn: [AffiliatedClinicStatus!]
  not: EnumAffiliatedClinicStatusFilter
}


input EnumInquiryTypeFilter {
  equals: InquiryType
  in: [InquiryType!]
  notIn: [InquiryType!]
  not: EnumInquiryTypeFilter
}


input EnumInquiryStatusFilter {
  equals: InquiryStatus
  in: [InquiryStatus!]
  notIn: [InquiryStatus!]
  not: EnumInquiryStatusFilter
}


input EnumEggApplicantStatusFilter {
  equals: EggApplicantStatus
  in: [EggApplicantStatus!]
  notIn: [EggApplicantStatus!]
  not: EnumEggApplicantStatusFilter
}


input EnumKenTransferStatusFilter {
  equals: KenTransferStatus
  in: [KenTransferStatus!]
  notIn: [KenTransferStatus!]
  not: EnumKenTransferStatusFilter
}


input EnumEggGradeFilter {
  equals: EggGrade
  in: [EggGrade!]
  notIn: [EggGrade!]
  not: EnumEggGradeFilter
}


input EnumStockInfoStatusFilter {
  equals: StockInfoStatus
  in: [StockInfoStatus!]
  notIn: [StockInfoStatus!]
  not: EnumStockInfoStatusFilter
}


input EnumEggTransportRequestStatusClinicSideFilter {
  equals: EggTransportRequestStatusClinicSide
  in: [EggTransportRequestStatusClinicSide!]
  notIn: [EggTransportRequestStatusClinicSide!]
  not: EnumEggTransportRequestStatusClinicSideFilter
}


input EnumEggTransportRequestStatusAdminSideFilter {
  equals: EggTransportRequestStatusAdminSide
  in: [EggTransportRequestStatusAdminSide!]
  notIn: [EggTransportRequestStatusAdminSide!]
  not: EnumEggTransportRequestStatusAdminSideFilter
}


input EnumBillingStatusFilter {
  equals: BillingStatus
  in: [BillingStatus!]
  notIn: [BillingStatus!]
  not: EnumBillingStatusFilter
}


input EnumBillingTypeFilter {
  equals: BillingType
  in: [BillingType!]
  notIn: [BillingType!]
  not: EnumBillingTypeFilter
}


input EnumDocumentStorageTypeFilter {
  equals: DocumentStorageType
  in: [DocumentStorageType!]
  notIn: [DocumentStorageType!]
  not: EnumDocumentStorageTypeFilter
}


input EnumDocumentTypeFilter {
  equals: DocumentType
  in: [DocumentType!]
  notIn: [DocumentType!]
  not: EnumDocumentTypeFilter
}


input EnumEggApplicantContractStatusFilter {
  equals: EggApplicantContractStatus
  in: [EggApplicantContractStatus!]
  notIn: [EggApplicantContractStatus!]
  not: EnumEggApplicantContractStatusFilter
}


input EnumSubscriptionStatusFilter {
  equals: SubscriptionStatus
  in: [SubscriptionStatus!]
  notIn: [SubscriptionStatus!]
  not: EnumSubscriptionStatusFilter
}


input EnumPaymentTransactionTypeFilter {
  equals: PaymentTransactionType
  in: [PaymentTransactionType!]
  notIn: [PaymentTransactionType!]
  not: EnumPaymentTransactionTypeFilter
}


input EnumPaymentTransactionStatusFilter {
  equals: PaymentTransactionStatus
  in: [PaymentTransactionStatus!]
  notIn: [PaymentTransactionStatus!]
  not: EnumPaymentTransactionStatusFilter
}


input EnumSystemConfigTypeFilter {
  equals: SystemConfigType
  in: [SystemConfigType!]
  notIn: [SystemConfigType!]
  not: EnumSystemConfigTypeFilter
}


input EnumUpdateTypeFilter {
  equals: UpdateType
  in: [UpdateType!]
  notIn: [UpdateType!]
  not: EnumUpdateTypeFilter
}


enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input AWSDateTimeFilter {
  equals: AWSDateTime
  in: [AWSDateTime!]
  notIn: [AWSDateTime!]
  lt: AWSDateTime
  lte: AWSDateTime
  gt: AWSDateTime
  gte: AWSDateTime
  not: AWSDateTimeFilter
}

input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntFilter
}

input FloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: FloatFilter
}

